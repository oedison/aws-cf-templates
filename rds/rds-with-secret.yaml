AWSTemplateFormatVersion: "2010-09-09"

Description:  This template deploys a RDS instance with an auto-generated user/password secret inside a given VPC.

Parameters:
  VPC:
    Description: VPC to create the RDS instance in
    Type: AWS::EC2::VPC::Id
  Subnet1:
    Description: Subnet 1 for RDS instance
    Type: AWS::EC2::Subnet::Id
  Subnet2:
    Description: Subnet 2 for RDS instance
    Type: AWS::EC2::Subnet::Id
  DBName:
    Description: Default database name
    Type: String
    Default: postgres
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  MasterUsername:
    Description: Master username
    Type: String
    Default: admin_user
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  InstanceClass:
    Description: Instance class
    Type: String
    Default: db.t4g.micro
    AllowedValues: [ db.t4g.micro, db.t4g.small, db.t4g.medium ]
  AllocatedStorage:
    Description: Allocated storage
    Type: Number
    Default: 5
    MinValue: 5
    MaxValue: 100
  MultiAZ:
    Description: MultiAZ master
    Type: String
    Default: false
    AllowedValues: [ true, false ]

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB subnet group
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:
        Fn::Sub: "${AWS::StackName}-db-secret"
      Description: RDS database auto-generated user password
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${MasterUsername}"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: postgres
      DBInstanceClass: !Ref InstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      DBName: !Ref DBName
      AutoMinorVersionUpgrade: true
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: false
      MasterUsername:
        Fn::Sub: "{{resolve:secretsmanager:${DBSecret}:SecretString:username}}"
      MasterUserPassword:
        Fn::Sub: "{{resolve:secretsmanager:${DBSecret}:SecretString:password}}"
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"

  DBAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DB Access Security Group
      VpcId:
        Ref: VPC

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Postgres DB Security Group
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - SourceSecurityGroupId:
            Ref: DBAccessSecurityGroup
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432

Outputs:
  DBEndpoint:
    Description: DB Endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-db-endpoint"

  DBAccessSecurityGroup:
    Description: DB Access Security Group
    Value: !Ref DBAccessSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-db-access-sg"
