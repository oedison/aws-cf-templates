AWSTemplateFormatVersion: "2010-09-09"

Description:  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets.

Mappings:
  SubnetConfig:
    VPC:
      CIDR: "10.0.0.0/16"
    Public1:
      CIDR: "10.0.0.0/24"
    Public2:
      CIDR: "10.0.1.0/24"
    Private1:
      CIDR: "10.0.2.0/24"
    Private2:
      CIDR: "10.0.3.0/24"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Fn::FindInMap: [ "SubnetConfig", "VPC", "CIDR" ]
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc"

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [ 0, Fn::GetAZs: "" ]
      CidrBlock:
        Fn::FindInMap: [ "SubnetConfig", "Public1", "CIDR" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-public-1"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Select: [ 1, Fn::GetAZs: "" ]
      CidrBlock:
        Fn::FindInMap: [ "SubnetConfig", "Public2", "CIDR" ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-public-2"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [ 0, Fn::GetAZs: "" ]
      CidrBlock:
        Fn::FindInMap: [ "SubnetConfig", "Private1", "CIDR" ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Private
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-private-1"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [ 1, Fn::GetAZs: "" ]
      CidrBlock:
        Fn::FindInMap: [ "SubnetConfig", "Private2", "CIDR" ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Private
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-private-2"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-igw"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-public-route-table"

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2

  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value:
            Ref: "AWS::StackName"
        - Key: Network
          Value: Public
        - Key: Name
          Value:
            Fn::Sub: "${AWS::StackName}-vpc-public-nacl"

  InboundHTTPPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  PublicSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      NetworkAclId:
        Ref: PublicNetworkAcl

  PublicSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      NetworkAclId:
        Ref: PublicNetworkAcl

Outputs:
  VpcId:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-vpc"

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub "${AWS::StackName}-vpc-public"

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub "${AWS::StackName}-vpc-private"

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-vpc-public-1"

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-vpc-public-2"

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-vpc-private-1"

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-vpc-private-2"
